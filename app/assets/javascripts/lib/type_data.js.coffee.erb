define [
  'models/country'
  'models/country_group'
], (Country, CountryGroup) ->
  'use strict'

  # Provide the necessary type, unit and country data to the client side

  rawUnits          = <%= ViewTypeData.units.to_json %>;
  rawDataTypes      = <%= ViewTypeData.data_types.to_json %>;
  rawIndicatorTypes = <%= ViewTypeData.indicator_types.to_json %>;
  rawCountries      = <%= ViewTypeData.countries.to_json %>;
  rawCountryGroups  = <%= ViewTypeData.country_groups.to_json %>;

  TypeData =
    # Unit representation types
    UNIT_ABSOLUTE: 0
    UNIT_PROPORTIONAL: 1
    #UNIT_RANKING: 2

    # Hashes and arrays with
    units: {}
    data_types: {}
    indicator_types: {}
    countries: {}
    country_groups: []

  freeze = Object.freeze or new Function()

  # Create units
  # ------------

  for unit in rawUnits
    TypeData.units[unit.key] = unit
    freeze unit
  freeze TypeData.units

  # Create data types
  # -----------------

  for dataType in rawDataTypes
    # Add units
    dataType.units = _(dataType.units).map (unitKey) ->
      TypeData.units[unitKey]
    # Save
    TypeData.data_types[dataType.key] = dataType
    freeze dataType
  freeze TypeData.data_types

  # Create indicator types
  # ----------------------

  for indicatorType in rawIndicatorTypes
    # Add units
    indicatorType.units = _(indicatorType.units).map (unitKey) ->
      TypeData.units[unitKey]
    # Save
    TypeData.indicator_types[indicatorType.key] = indicatorType
    freeze indicatorType
  freeze TypeData.indicator_types

  # Create countries
  # ----------------

  for rawCountry in rawCountries
    country = new Country rawCountry
    TypeData.countries[rawCountry.iso3] = country
    # We canâ€™t freeze the countries since they will be added to collections
    # which sets a `collection` property.
  freeze TypeData.countries

  # Create country groups
  # ---------------------

  for rawCountryGroup in rawCountryGroups
    rawCountryGroup.countries = _(rawCountryGroup.countries).map (iso3) ->
      { iso3: iso3 }
    countryGroup = new CountryGroup rawCountryGroup, parse: true
    TypeData.country_groups.push countryGroup
  freeze TypeData.country_groups

  # Cleanup
  # -------
  rawUnits = rawDataTypes = rawIndicatorTypes =
    rawCountries = rawCountryGroups = null

  freeze TypeData
  TypeData
